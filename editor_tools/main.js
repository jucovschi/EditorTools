// Generated by CoffeeScript 1.4.0

define(function(require) {
  var Adapter, Interpretter, Tex, Toolbar;
  Adapter = require("editor_tools/ace_text_adapter");
  Tex = require("editor_tools/tex_utils");
  Toolbar = require("editor_tools/scriptable_toolbar");
  Interpretter = require("editor_tools/interpretter");
  return {
    enrich_editor: function(editor, id) {
      var doc, header, interpretter, layout, termToggle, terminal, tex_utils, toolbar, wrapped;
      wrapped = $(id).wrap("<div>").parent();
      $(id).addClass("ui-layout-center");
      header = $("<div>").addClass("ui-layout-north");
      terminal = $("<div>").addClass("ui-layout-south");
      wrapped.prepend(header);
      wrapped.append(terminal);
      layout = null;
      jQuery(document).ready(function() {
        $(wrapped).width($(id).width());
        $(wrapped).height($(id).height());
        return layout = wrapped.layout({
          enableCursorHotkey: false,
          north: {
            closable: false,
            size: 20,
            resizable: false
          },
          south: {
            resizable: true,
            size: 80,
            initClosed: true
          }
        });
      });
      doc = new Adapter(editor);
      tex_utils = new Tex(doc);
      interpretter = new Interpretter(tex_utils);
      toolbar = new Toolbar(header, interpretter);
      jQuery.get("macros/tex.json", function(data) {
        return toolbar.init(JSON.parse(data));
      });
      termToggle = function(evt) {
        if (evt.keyCode === 192 && evt.ctrlKey) {
          if (layout.state.south.isClosed) {
            layout.open("south");
            $(terminal).trigger("click");
            $(terminal).focus();
            editor.blur();
          } else {
            layout.close("south");
            editor.focus();
          }
          return false;
        }
      };
      $(terminal).terminal(function(command, term) {
        return term.echo(interpretter.exec(command));
      }, {
        greetings: "",
        tabcompletion: true,
        keyDown: termToggle,
        completion: function(terminal, string, callback) {
          return interpretter.autocomplete(string, callback);
        }
      });
      return $(wrapped).keydown(termToggle);
    }
  };
});
