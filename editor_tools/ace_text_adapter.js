// Generated by CoffeeScript 1.4.0

define(function(require) {
  var AceTextAdapter;
  AceTextAdapter = (function() {

    function AceTextAdapter(ace) {
      this.ace = ace;
      this.session = this.ace.getSession();
    }

    AceTextAdapter.prototype.getText = function() {
      return this.ace.getValue();
    };

    AceTextAdapter.prototype.insert = function(pos, text) {
      return this.session.insert(pos, text);
    };

    AceTextAdapter.prototype.getSelectedRange = function() {
      return this.session.getSelection().getRange();
    };

    AceTextAdapter.prototype.getCursorPosition = function() {
      return this.ace.getCursorPosition();
    };

    AceTextAdapter.prototype.setCursorPosition = function(pos) {
      this.ace.moveCursorToPosition(pos);
      return this.ace.clearSelection();
    };

    AceTextAdapter.prototype.focus = function() {
      return this.ace.focus();
    };

    AceTextAdapter.prototype.isPositionBefore = function(pos1, pos2) {
      if (pos1.row !== pos2.row) {
        return pos1.row < pos2.row;
      }
      return pos1.column < pos2.column;
    };

    AceTextAdapter.prototype.addPositionOffset = function(pos, offset) {
      return {
        row: pos.row,
        column: pos.column + offset
      };
    };

    AceTextAdapter.prototype.insertAtCursor = function(text) {
      return this.ace.insert(text);
    };

    AceTextAdapter.prototype.getLineIterator = function(pos) {
      var obj, session;
      session = this.session;
      obj = {
        l: pos.row,
        c: pos.column,
        getOffsetInLine: function() {
          return this.c;
        },
        getPos: function() {
          return {
            row: this.l,
            column: 0
          };
        },
        getLine: function() {
          return session.getLine(this.l);
        },
        hasNext: function() {
          return this.l < session.getLength();
        },
        hasPrevious: function() {
          return this.l > 0;
        },
        getNext: function() {
          this.l++;
          this.c = 0;
          return this.getLine();
        },
        getPrevious: function() {
          this.l--;
          this.c = 0;
          return this.getLine();
        }
      };
      return obj;
    };

    return AceTextAdapter;

  })();
  return AceTextAdapter;
});
