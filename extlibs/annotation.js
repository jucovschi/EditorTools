var info_kwarc_sally_comm_annotation = {
  name: 'info_kwarc_sally_comm_annotation',
  defaultElementNamespaceURI: 'http:\/\/kwarc.info\/sally\/comm\/annotation',
  typeInfos: [{
      type: 'classInfo',
      localName: 'GetSelectionResponse',
      propertyInfos: [{
          type: 'element',
          name: 'id',
          collection: true,
          elementName: 'id',
          typeInfo: 'String'
        }]
    }, {
      type: 'classInfo',
      localName: 'GetSelection',
      propertyInfos: []
    }, {
      type: 'classInfo',
      localName: 'NavigateTo',
      propertyInfos: [{
          type: 'element',
          name: 'id',
          elementName: 'id',
          typeInfo: 'String'
        }]
    }, {
      type: 'classInfo',
      localName: 'RemoveAnnotation',
      propertyInfos: [{
          type: 'element',
          name: 'id',
          collection: true,
          elementName: 'id',
          typeInfo: 'String'
        }]
    }, {
      type: 'classInfo',
      localName: 'GetAnnotations',
      propertyInfos: []
    }, {
      type: 'classInfo',
      localName: 'GetAnnotationsResponse',
      propertyInfos: [{
          type: 'element',
          name: 'id',
          collection: true,
          elementName: 'id',
          typeInfo: 'String'
        }]
    }, {
      type: 'classInfo',
      localName: 'PersistSelection',
      propertyInfos: [{
          type: 'element',
          name: 'id',
          elementName: 'id',
          typeInfo: 'String'
        }]
    }],
  elementInfos: [{
      elementName: 'GetSelectionResponse',
      typeInfo: 'info_kwarc_sally_comm_annotation.GetSelectionResponse'
    }, {
      elementName: 'GetSelection',
      typeInfo: 'info_kwarc_sally_comm_annotation.GetSelection'
    }, {
      elementName: 'NavigateTo',
      typeInfo: 'info_kwarc_sally_comm_annotation.NavigateTo'
    }, {
      elementName: 'RemoveAnnotation',
      typeInfo: 'info_kwarc_sally_comm_annotation.RemoveAnnotation'
    }, {
      elementName: 'GetAnnotations',
      typeInfo: 'info_kwarc_sally_comm_annotation.GetAnnotations'
    }, {
      elementName: 'GetAnnotationsResponse',
      typeInfo: 'info_kwarc_sally_comm_annotation.GetAnnotationsResponse'
    }, {
      elementName: 'PersistSelection',
      typeInfo: 'info_kwarc_sally_comm_annotation.PersistSelection'
    }]
};

define("info_kwarc_sally_comm_annotation", function(){});

// Generated by CoffeeScript 1.7.1
define('annotation',['require','sally_client','info_kwarc_sally_comm_annotation','jsonix'],function(require) {
  var Annotation, Jsonix, annotation, context, marshaller, unmarshaller;
  require("sally_client");
  annotation = require("info_kwarc_sally_comm_annotation");
  Jsonix = (require("jsonix")).Jsonix;
  context = new Jsonix.Context([annotation.info_kwarc_sally_comm_annotation]);
  marshaller = context.createMarshaller();
  unmarshaller = context.createUnmarshaller();
  return Annotation = (function() {
    function Annotation(repoURL, docPath, repoInstanceID) {
      this.repoURL = repoURL;
      this.docPath = docPath;
      this.repoInstanceID = repoInstanceID != null ? repoInstanceID : null;
    }

    Annotation.prototype.getName = function() {
      return "annotation";
    };

    Annotation.prototype.marshal = function(obj) {
      return marshaller.marshalString(obj);
    };

    Annotation.prototype.unmarshal = function(str) {
      return unmarshaller.unmarshalString(str);
    };

    Annotation.prototype.handleMessage = function(msg, sendBack) {
      var id;
      if (msg.name.localPart === "NavigateTo") {
        id = msg.values.id;
        return $(".annotator-hl").each(function(idx, obj) {
          var offset, top;
          if (id === $(obj).data("annotation").id) {
            console.log(obj);
            window.selobj = obj;
            offset = $(obj).offset();
            top = Math.max(0, offset.top - 100);
            return $('html, body').animate({
              scrollTop: top,
              scrollLeft: 0
            });
          }
        });
      }
    };

    return Annotation;

  })();
});

